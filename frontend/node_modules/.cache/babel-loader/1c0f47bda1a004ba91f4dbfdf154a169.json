{"ast":null,"code":"import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, NOT_LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ } from \"../types\";\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        credentials: action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case NOT_LOADING_USER:\n      return { ...state,\n        loading: false\n      };\n\n    case LIKE_SCREAM:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          screamId: action.payload.screamId\n        }]\n      };\n\n    case UNLIKE_SCREAM:\n      return { ...state,\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/scream/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","NOT_LOADING_USER","LIKE_SCREAM","UNLIKE_SCREAM","MARK_NOTIFICATIONS_READ","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","not","read"],"mappings":"AAAA,SACEA,QADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,WANF,EAOEC,aAPF,EAQEC,uBARF,QASO,UATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,iBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKP,mBAAL;AACE,aAAOM,YAAP;;AACF,SAAKR,QAAL;AACE,aAAO;AACLS,QAAAA,aAAa,EAAE,IADV;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,WAAW,EAAEI,MAAM,CAACE;AAHf,OAAP;;AAKF,SAAKd,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;AACEM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MADhC;AAEEC,UAAAA,QAAQ,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAF3B,SAFK;AAFF,OAAP;;AAUF,SAAKd,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CACJC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBL,MAAM,CAACE,OAAP,CAAeG,QADtC;AAFF,OAAP;;AAMF,SAAKb,uBAAL;AACEO,MAAAA,KAAK,CAACD,aAAN,CAAoBU,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,aAAO,EACL,GAAGX;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AAhDJ;AAkDD","sourcesContent":["import {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  NOT_LOADING_USER,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  MARK_NOTIFICATIONS_READ,\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        credentials: action.payload,\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case NOT_LOADING_USER:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LIKE_SCREAM:\n      return {\n        ...state,\n        likes: [\n          ...state.likes,\n          {\n            userHandle: state.credentials.handle,\n            screamId: action.payload.screamId,\n          },\n        ],\n      };\n    case UNLIKE_SCREAM:\n      return {\n        ...state,\n        likes: state.likes.filter(\n          (like) => like.screamId !== action.payload.screamId\n        ),\n      };\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach((not) => (not.read = true));\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}