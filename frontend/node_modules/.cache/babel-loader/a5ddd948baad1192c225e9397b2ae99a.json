{"ast":null,"code":"import _defineProperty from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import withStyles from\"@material-ui/core/styles/withStyles\";// MUI\nimport Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import CircularProgress from\"@material-ui/core/CircularProgress\";import FormControl from\"@material-ui/core/FormControl\";// Redux stuff\nimport{connect}from\"react-redux\";import{postScream,clearErrors}from\"../../redux/actions/dataActions\";var styles=function styles(){return{submitButton:{position:\"relative\",float:\"right\",marginTop:10},progressSpinner:{position:\"absolute\"},closeButton:{position:\"absolute\",left:\"91%\",top:\"6%\"}};};var AddScream=/*#__PURE__*/function(_Component){_inherits(AddScream,_Component);var _super=_createSuper(AddScream);function AddScream(){var _this;_classCallCheck(this,AddScream);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={body:\"\",errors:{}};_this.handleSubmit=function(event){event.preventDefault();_this.props.postScream({body:_this.state.body});_this.setState({body:\"\"});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};return _this;}_createClass(AddScream,[{key:\"render\",value:function render(){var errors=this.state.errors;var _this$props=this.props,classes=_this$props.classes,loading=_this$props.UI.loading;return/*#__PURE__*/React.createElement(\"div\",{style:{padding:20,position:\"relative\",display:\"flex\",marginBottom:20,border:\"2px gray\",borderRadius:\"10px\",boxShadow:\"3px 3px 8px #888888\",backgroundColor:\"rgb(255, 255, 255)\"}},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(TextField,{name:\"body\",type:\"text\",label:\"Add New Post\",multiline:true,rows:\"3\",placeholder:\"Type here\",error:errors.body?true:false,helperText:errors.body,value:this.state.body,onChange:this.handleChange,fullWidth:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.submitButton,disabled:loading},\"Submit\",loading&&/*#__PURE__*/React.createElement(CircularProgress,{size:30,className:classes.progressSpinner})))));}}]);return AddScream;}(Component);var mapStateToProps=function mapStateToProps(state){return{UI:state.ui};};export default connect(mapStateToProps,{postScream:postScream,clearErrors:clearErrors})(withStyles(styles)(AddScream));","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/src/components/scream/AddScream.js"],"names":["React","Component","withStyles","Button","TextField","CircularProgress","FormControl","connect","postScream","clearErrors","styles","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","AddScream","state","body","errors","handleSubmit","event","preventDefault","props","setState","handleChange","target","name","value","classes","loading","UI","padding","display","marginBottom","border","borderRadius","boxShadow","backgroundColor","mapStateToProps","ui"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = () => ({\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\",\n  },\n});\n\nclass AddScream extends Component {\n  state = {\n    body: \"\",\n    errors: {},\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.postScream({ body: this.state.body });\n    this.setState({ body: \"\" });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    return (\n      <div\n        style={{\n          padding: 20,\n          position: \"relative\",\n          display: \"flex\",\n          marginBottom: 20,\n          border: \"2px gray\",\n          borderRadius: \"10px\",\n          boxShadow: \"3px 3px 8px #888888\",\n          backgroundColor: \"rgb(255, 255, 255)\",\n        }}\n      >\n        <FormControl fullWidth>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              name=\"body\"\n              type=\"text\"\n              label=\"Add New Post\"\n              multiline\n              rows=\"3\"\n              placeholder=\"Type here\"\n              error={errors.body ? true : false}\n              helperText={errors.body}\n              value={this.state.body}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n              disabled={loading}\n            >\n              Submit\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progressSpinner}\n                />\n              )}\n            </Button>\n          </form>\n        </FormControl>\n      </div>\n    );\n  }\n}\nAddScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.ui,\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(AddScream)\n);\n"]},"metadata":{},"sourceType":"module"}