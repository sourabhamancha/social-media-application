{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/scream/src/components/EditDetails.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\"; //import MyButton from \"../../util/MyButton\";\n// Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { editUserDetails } from \"../../redux/actions/userActions\"; // MUI Stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\"; // Icons\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Tooltip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nclass EditDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bio: \"\",\n      website: \"\",\n      location: \"\",\n      open: false\n    };\n\n    this.mapUserDetailsToState = credentials => {\n      this.setState({\n        bio: credentials.bio ? credentials.bio : \"\",\n        website: credentials.website ? credentials.website : \"\",\n        location: credentials.location ? credentials.location : \"\"\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.mapUserDetailsToState(this.props.credentials);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      credentials\n    } = this.props;\n    this.mapUserDetailsToState(credentials);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Edit details\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Edit your details\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"bio\",\n      tpye: \"text\",\n      label: \"Bio\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"A short bio about yourself\",\n      value: this.state.bio,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"website\",\n      tpye: \"text\",\n      label: \"Website\",\n      placeholder: \"Your personal/professinal website\",\n      value: this.state.website,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"location\",\n      tpye: \"text\",\n      label: \"Location\",\n      placeholder: \"Where you live\",\n      value: this.state.location,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {\n  editUserDetails\n})(EditDetails);","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/scream/src/components/EditDetails.js"],"names":["React","Component","Fragment","PropTypes","connect","editUserDetails","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","EditIcon","Tooltip","IconButton","EditDetails","state","bio","website","location","open","mapUserDetailsToState","credentials","setState","handleOpen","props","handleClose","handleChange","event","target","name","value","componentDidMount","render","propTypes","func","isRequired","classes","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n//import MyButton from \"../../util/MyButton\";\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { editUserDetails } from \"../../redux/actions/userActions\";\n// MUI Stuff\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n// Icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Tooltip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nclass EditDetails extends Component {\n  state = {\n    bio: \"\",\n    website: \"\",\n    location: \"\",\n    open: false,\n  };\n  mapUserDetailsToState = (credentials) => {\n    this.setState({\n      bio: credentials.bio ? credentials.bio : \"\",\n      website: credentials.website ? credentials.website : \"\",\n      location: credentials.location ? credentials.location : \"\",\n    });\n  };\n  componentDidMount() {\n    const { credentials } = this.props;\n    this.mapUserDetailsToState(credentials);\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n    this.mapUserDetailsToState(this.props.credentials);\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  render() {\n    return (\n      <Fragment>\n        <Tooltip title=\"Edit details\" placement=\"top\">\n          <IconButton onClick={this.handleOpen}>\n            <EditIcon color=\"primary\" />\n          </IconButton>\n        </Tooltip>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <DialogTitle>Edit your details</DialogTitle>\n          <DialogContent>\n            <form>\n              <TextField\n                name=\"bio\"\n                tpye=\"text\"\n                label=\"Bio\"\n                multiline\n                rows=\"3\"\n                placeholder=\"A short bio about yourself\"\n                value={this.state.bio}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                name=\"website\"\n                tpye=\"text\"\n                label=\"Website\"\n                placeholder=\"Your personal/professinal website\"\n                value={this.state.website}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                name=\"location\"\n                tpye=\"text\"\n                label=\"Location\"\n                placeholder=\"Where you live\"\n                value={this.state.location}\n                onChange={this.handleChange}\n                fullWidth\n              />\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  credentials: state.user.credentials,\n});\n\nexport default connect(mapStateToProps, { editUserDetails })(EditDetails);\n"]},"metadata":{},"sourceType":"module"}