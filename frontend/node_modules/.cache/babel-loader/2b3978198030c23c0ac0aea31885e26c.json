{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/full-stack-social-media-app/scream/src/components/scream/AddScream.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // MUI\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\"; // Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = () => ({\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\"\n  }\n});\n\nclass AddScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: \"\",\n      errors: {}\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postScream({\n        body: this.state.body\n      });\n      this.setState({\n        body: \"\"\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 20,\n        position: \"relative\",\n        display: \"flex\",\n        marginBottom: 20,\n        border: \"2px solid gray\",\n        borderRadius: \"10px\",\n        boxShadow: \"2px 2px 2px #888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Add New Post\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"Type here\",\n      error: errors.body ? true : false,\n      helperText: errors.body,\n      value: this.state.body,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nAddScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.ui\n});\n\nexport default connect(mapStateToProps, {\n  postScream,\n  clearErrors\n})(withStyles(styles)(AddScream));","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/full-stack-social-media-app/scream/src/components/scream/AddScream.js"],"names":["React","Component","PropTypes","withStyles","Button","TextField","CircularProgress","FormControl","connect","postScream","clearErrors","styles","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","AddScream","state","body","errors","handleSubmit","event","preventDefault","props","setState","handleChange","target","name","value","render","classes","UI","loading","padding","display","marginBottom","border","borderRadius","boxShadow","propTypes","func","isRequired","object","mapStateToProps","ui"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = () => ({\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\",\n  },\n});\n\nclass AddScream extends Component {\n  state = {\n    body: \"\",\n    errors: {},\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.postScream({ body: this.state.body });\n    this.setState({ body: \"\" });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    return (\n      <div\n        style={{\n          padding: 20,\n          position: \"relative\",\n          display: \"flex\",\n          marginBottom: 20,\n          border: \"2px solid gray\",\n          borderRadius: \"10px\",\n          boxShadow: \"2px 2px 2px #888888\",\n        }}\n      >\n        <FormControl fullWidth>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              name=\"body\"\n              type=\"text\"\n              label=\"Add New Post\"\n              multiline\n              rows=\"3\"\n              placeholder=\"Type here\"\n              error={errors.body ? true : false}\n              helperText={errors.body}\n              value={this.state.body}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n              disabled={loading}\n            >\n              Submit\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progressSpinner}\n                />\n              )}\n            </Button>\n          </form>\n        </FormControl>\n      </div>\n    );\n  }\n}\nAddScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.ui,\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(AddScream)\n);\n"]},"metadata":{},"sourceType":"module"}