{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/full-stack-social-media-app/scream/src/components/scream/AddScream.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // MUI\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = () => ({\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\"\n  }\n});\n\nclass AddScream extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      body: \"\",\n      errors: {}\n    };\n\n    this.handleSubmit = () => {};\n\n    this.handleChange = () => {};\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Post a new Scream\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Post a new Scream!!\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"Type your screem\",\n      error: errors.body ? true : false,\n      helperText: errors.body,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nAddScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.ui\n});\n\nexport default connect(mapStateToProps, {\n  postScream,\n  clearErrors\n})(withStyles(styles)(AddScream));","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/full-stack-social-media-app/scream/src/components/scream/AddScream.js"],"names":["React","Component","PropTypes","withStyles","Button","TextField","CircularProgress","connect","postScream","clearErrors","styles","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","AddScream","state","open","body","errors","handleSubmit","handleChange","render","classes","UI","loading","props","textField","propTypes","func","isRequired","object","mapStateToProps","ui"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = () => ({\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\",\n  },\n});\n\nclass AddScream extends Component {\n  state = {\n    open: false,\n    body: \"\",\n    errors: {},\n  };\n  handleSubmit = () => {};\n  handleChange = () => {};\n\n  render() {\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    return (\n      <div>\n        <p>Post a new Scream</p>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Post a new Scream!!\"\n            multiline\n            rows=\"3\"\n            placeholder=\"Type your screem\"\n            error={errors.body ? true : false}\n            helperText={errors.body}\n            className={classes.textField}\n            onChange={this.handleChange}\n            fullWidth\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Submit\n            {loading && (\n              <CircularProgress size={30} className={classes.progressSpinner} />\n            )}\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\nAddScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.ui,\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(AddScream)\n);\n"]},"metadata":{},"sourceType":"module"}