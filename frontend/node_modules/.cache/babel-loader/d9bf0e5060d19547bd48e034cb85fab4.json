{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/scream/src/components/Scream.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\"; //import relativeTime from \"dayjs/plugin/relativeTime\";\n\nimport PropTypes from \"prop-types\";\nimport MyButton from \"../util/MyButton\";\nimport DeleteScream from \"./DeleteScream\";\nimport ScreamDialog from \"./ScreamDialog\";\nimport LikeButton from \"./LikeButton\"; // MUI Stuff\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\"; // Icons\n\nimport ChatIcon from \"@material-ui/icons/Chat\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { likeScream, unlikeScream } from \"../redux/actions/dataActions\";\nconst styles = {\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\"\n  }\n};\n\nclass Scream extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.likedScream = () => {\n      if (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.scream.screamId)) return true;else return false;\n    };\n\n    this.likeScream = () => {\n      this.props.likeScream(this.props.scream.screamId);\n    };\n\n    this.unlikeScream = () => {\n      this.props.unlikeScream(this.props.scream.screamId);\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials: {\n          handle\n        }\n      }\n    } = this.props;\n    const deleteButton = authenticated && userHandle === handle ? /*#__PURE__*/React.createElement(DeleteScream, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }) : null;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      image: userImage,\n      title: \"Profile image\",\n      className: classes.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${userHandle}`,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, userHandle), deleteButton, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).fromNow()), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, body), /*#__PURE__*/React.createElement(LikeButton, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, likeCount, \" Likes\"), /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChatIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, commentCount, \" comments\"), /*#__PURE__*/React.createElement(ScreamDialog, {\n      screamId: screamId,\n      userHandle: userHandle,\n      openDialog: this.props.openDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nScream.propTypes = {\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/scream/src/components/Scream.js"],"names":["React","Component","withStyles","Link","dayjs","PropTypes","MyButton","DeleteScream","ScreamDialog","LikeButton","Card","CardContent","CardMedia","Typography","ChatIcon","connect","likeScream","unlikeScream","styles","card","position","display","marginBottom","image","minWidth","content","padding","objectFit","Scream","likedScream","props","user","likes","find","like","screamId","scream","render","classes","body","createdAt","userImage","userHandle","likeCount","commentCount","authenticated","credentials","handle","deleteButton","fromNow","openDialog","propTypes","func","isRequired","object","bool","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n//import relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\nimport MyButton from \"../util/MyButton\";\nimport DeleteScream from \"./DeleteScream\";\nimport ScreamDialog from \"./ScreamDialog\";\nimport LikeButton from \"./LikeButton\";\n// MUI Stuff\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n// Icons\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { likeScream, unlikeScream } from \"../redux/actions/dataActions\";\n\nconst styles = {\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: 20,\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\",\n  },\n};\n\nclass Scream extends Component {\n  likedScream = () => {\n    if (\n      this.props.user.likes &&\n      this.props.user.likes.find(\n        (like) => like.screamId === this.props.scream.screamId\n      )\n    )\n      return true;\n    else return false;\n  };\n  likeScream = () => {\n    this.props.likeScream(this.props.scream.screamId);\n  };\n  unlikeScream = () => {\n    this.props.unlikeScream(this.props.scream.screamId);\n  };\n  render() {\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount,\n      },\n      user: {\n        authenticated,\n        credentials: { handle },\n      },\n    } = this.props;\n    const deleteButton =\n      authenticated && userHandle === handle ? (\n        <DeleteScream screamId={screamId} />\n      ) : null;\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n          image={userImage}\n          title=\"Profile image\"\n          className={classes.image}\n        />\n        <CardContent className={classes.content}>\n          <Typography\n            variant=\"h5\"\n            component={Link}\n            to={`/users/${userHandle}`}\n            color=\"primary\"\n          >\n            {userHandle}\n          </Typography>\n          {deleteButton}\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {dayjs(createdAt).fromNow()}\n          </Typography>\n          <Typography variant=\"body1\">{body}</Typography>\n          <LikeButton screamId={screamId} />\n          <span>{likeCount} Likes</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color=\"primary\" />\n          </MyButton>\n          <span>{commentCount} comments</span>\n          <ScreamDialog\n            screamId={screamId}\n            userHandle={userHandle}\n            openDialog={this.props.openDialog}\n          />\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nScream.propTypes = {\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(Scream));\n"]},"metadata":{},"sourceType":"module"}