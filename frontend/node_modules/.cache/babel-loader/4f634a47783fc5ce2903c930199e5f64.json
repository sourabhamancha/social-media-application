{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/scream/src/components/ScreamDialog.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\"; // MUI Stuff\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; // Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\"; // Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../redux/actions/dataActions\";\n\nconst styles = () => ({\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50\n  }\n});\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: \"\",\n      newPath: \"\"\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        userHandle,\n        screamId\n      } = this.props;\n      const newPath = `/users/${userHandle}/scream/${screamId}`;\n      if (oldPath === newPath) oldPath = `/users/${userHandle}`;\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 200,\n      thickness: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: Link,\n      color: \"primary\",\n      variant: \"h5\",\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"@\", userHandle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, body), /*#__PURE__*/React.createElement(LikeButton, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, likeCount, \" likes\"), /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChatIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, commentCount, \" comments\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CommentForm, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      comments: comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand scream\",\n      tipClassName: classes.expandButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, dialogMarkup)));\n  }\n\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.ui\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/scream/src/components/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","LikeButton","Comments","CommentForm","dayjs","Link","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","clearErrors","styles","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","ScreamDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","userHandle","screamId","props","history","pushState","setState","handleClose","componentDidMount","openDialog","render","classes","scream","body","createdAt","likeCount","commentCount","userImage","comments","UI","loading","dialogMarkup","format","visibleSeparator","propTypes","func","isRequired","string","object","mapStateToProps","data","ui","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\n// MUI Stuff\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n// Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../redux/actions/dataActions\";\n\nconst styles = () => ({\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  dialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50,\n  },\n});\n\nclass ScreamDialog extends Component {\n  state = {\n    open: false,\n    oldPath: \"\",\n    newPath: \"\",\n  };\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n  handleOpen = () => {\n    let oldPath = window.location.pathname;\n\n    const { userHandle, screamId } = this.props;\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\n\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`;\n\n    window.history.pushState(null, null, newPath);\n\n    this.setState({ open: true, oldPath, newPath });\n    this.props.getScream(this.props.screamId);\n  };\n  handleClose = () => {\n    window.history.pushState(null, null, this.state.oldPath);\n    this.setState({ open: false });\n    this.props.clearErrors();\n  };\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments,\n      },\n      UI: { loading },\n    } = this.props;\n\n    const dialogMarkup = loading ? (\n      <div className={classes.spinnerDiv}>\n        <CircularProgress size={200} thickness={2} />\n      </div>\n    ) : (\n      <Grid container spacing={16}>\n        <Grid item sm={5}>\n          <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\n        </Grid>\n        <Grid item sm={7}>\n          <Typography\n            component={Link}\n            color=\"primary\"\n            variant=\"h5\"\n            to={`/users/${userHandle}`}\n          >\n            @{userHandle}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n          </Typography>\n\n          <Typography variant=\"body1\">{body}</Typography>\n          <LikeButton screamId={screamId} />\n          <span>{likeCount} likes</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color=\"primary\" />\n          </MyButton>\n          <span>{commentCount} comments</span>\n        </Grid>\n        <hr className={classes.visibleSeparator} />\n        <CommentForm screamId={screamId} />\n        <Comments comments={comments} />\n      </Grid>\n    );\n    return (\n      <Fragment>\n        <MyButton\n          onClick={this.handleOpen}\n          tip=\"Expand scream\"\n          tipClassName={classes.expandButton}\n        >\n          <UnfoldMore color=\"primary\" />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogContent className={classes.dialogContent}>\n            {dialogMarkup}\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.ui,\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}