{"ast":null,"code":"import _toConsumableArray from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SET_SCREAMS,LIKE_SCREAM,UNLIKE_SCREAM,LOADING_DATA,DELETE_SCREAM,POST_SCREAM,SET_SCREAM,SUBMIT_COMMENT}from\"../types\";var initialState={screams:[],scream:{},loading:false};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOADING_DATA:return _objectSpread(_objectSpread({},state),{},{loading:true});case SET_SCREAMS:return _objectSpread(_objectSpread({},state),{},{screams:action.payload,loading:false});case SET_SCREAM:return _objectSpread(_objectSpread({},state),{},{scream:action.payload});case LIKE_SCREAM:case UNLIKE_SCREAM:var comments=state.scream.comments;var index=state.screams.findIndex(function(scream){return scream.screamId===action.payload.screamId;});state.screams[index]=action.payload;if(state.scream.screamId===action.payload.screamId){state.scream=action.payload;}state.scream.comments=comments;return _objectSpread({},state);case DELETE_SCREAM:var del_index=state.screams.findIndex(function(scream){return scream.screamId===action.payload;});state.screams.splice(del_index,1);return _objectSpread({},state);case POST_SCREAM:return _objectSpread(_objectSpread({},state),{},{screams:[action.payload].concat(_toConsumableArray(state.screams))});case SUBMIT_COMMENT:return _objectSpread(_objectSpread({},state),{},{scream:_objectSpread(_objectSpread({},state.scream),{},{comments:[action.payload].concat(_toConsumableArray(state.scream.comments))})});default:return state;}}","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/full-stack-social-media-app/frontend/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","DELETE_SCREAM","POST_SCREAM","SET_SCREAM","SUBMIT_COMMENT","initialState","screams","scream","loading","state","action","type","payload","comments","index","findIndex","screamId","del_index","splice"],"mappings":"iTAAA,OACEA,WADF,CAEEC,WAFF,CAGEC,aAHF,CAIEC,YAJF,CAKEC,aALF,CAMEC,WANF,CAOEC,UAPF,CAQEC,cARF,KASO,UATP,CAWA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,EADU,CAEnBC,MAAM,CAAE,EAFW,CAGnBC,OAAO,CAAE,KAHU,CAArB,CAMA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKX,CAAAA,YAAL,CACE,sCACKS,KADL,MAEED,OAAO,CAAE,IAFX,GAIF,IAAKX,CAAAA,WAAL,CACE,sCACKY,KADL,MAEEH,OAAO,CAAEI,MAAM,CAACE,OAFlB,CAGEJ,OAAO,CAAE,KAHX,GAKF,IAAKL,CAAAA,UAAL,CACE,sCACKM,KADL,MAEEF,MAAM,CAAEG,MAAM,CAACE,OAFjB,GAIF,IAAKd,CAAAA,WAAL,CACA,IAAKC,CAAAA,aAAL,CACE,GAAIc,CAAAA,QAAQ,CAAGJ,KAAK,CAACF,MAAN,CAAaM,QAA5B,CACA,GAAIC,CAAAA,KAAK,CAAGL,KAAK,CAACH,OAAN,CAAcS,SAAd,CACV,SAACR,MAAD,QAAYA,CAAAA,MAAM,CAACS,QAAP,GAAoBN,MAAM,CAACE,OAAP,CAAeI,QAA/C,EADU,CAAZ,CAGAP,KAAK,CAACH,OAAN,CAAcQ,KAAd,EAAuBJ,MAAM,CAACE,OAA9B,CACA,GAAIH,KAAK,CAACF,MAAN,CAAaS,QAAb,GAA0BN,MAAM,CAACE,OAAP,CAAeI,QAA7C,CAAuD,CACrDP,KAAK,CAACF,MAAN,CAAeG,MAAM,CAACE,OAAtB,CACD,CACDH,KAAK,CAACF,MAAN,CAAaM,QAAb,CAAwBA,QAAxB,CACA,wBACKJ,KADL,EAGF,IAAKR,CAAAA,aAAL,CACE,GAAIgB,CAAAA,SAAS,CAAGR,KAAK,CAACH,OAAN,CAAcS,SAAd,CACd,SAACR,MAAD,QAAYA,CAAAA,MAAM,CAACS,QAAP,GAAoBN,MAAM,CAACE,OAAvC,EADc,CAAhB,CAGAH,KAAK,CAACH,OAAN,CAAcY,MAAd,CAAqBD,SAArB,CAAgC,CAAhC,EACA,wBACKR,KADL,EAGF,IAAKP,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEH,OAAO,EAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,OAA5B,EAFT,GAIF,IAAKF,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEF,MAAM,gCACDE,KAAK,CAACF,MADL,MAEJM,QAAQ,EAAGH,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACF,MAAN,CAAaM,QAAnC,EAFJ,EAFR,GAOF,QACE,MAAOJ,CAAAA,KAAP,CArDJ,CAuDD","sourcesContent":["import {\n  SET_SCREAMS,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  LOADING_DATA,\n  DELETE_SCREAM,\n  POST_SCREAM,\n  SET_SCREAM,\n  SUBMIT_COMMENT,\n} from \"../types\";\n\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_SCREAMS:\n      return {\n        ...state,\n        screams: action.payload,\n        loading: false,\n      };\n    case SET_SCREAM:\n      return {\n        ...state,\n        scream: action.payload,\n      };\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let comments = state.scream.comments;\n      let index = state.screams.findIndex(\n        (scream) => scream.screamId === action.payload.screamId\n      );\n      state.screams[index] = action.payload;\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream = action.payload;\n      }\n      state.scream.comments = comments;\n      return {\n        ...state,\n      };\n    case DELETE_SCREAM:\n      let del_index = state.screams.findIndex(\n        (scream) => scream.screamId === action.payload\n      );\n      state.screams.splice(del_index, 1);\n      return {\n        ...state,\n      };\n    case POST_SCREAM:\n      return {\n        ...state,\n        screams: [action.payload, ...state.screams],\n      };\n    case SUBMIT_COMMENT:\n      return {\n        ...state,\n        scream: {\n          ...state.scream,\n          comments: [action.payload, ...state.scream.comments],\n        },\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}