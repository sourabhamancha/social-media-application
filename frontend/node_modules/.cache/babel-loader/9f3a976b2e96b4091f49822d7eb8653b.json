{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/scream/src/components/Scream.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\"; //import dayjs from \"dayjs\";\n//import relativeTime from \"dayjs/plugin/relativeTime\";\n\nimport PropTypes from \"prop-types\"; //import MyButton from \"../util/MyButton\";\n//import DeleteScream from \"./DeleteScream\";\n//import ScreamDialog from \"./ScreamDialog\";\n//import LikeButton from \"./LikeButton\";\n// MUI Stuff\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\"; // Icons\n//import ChatIcon from \"@material-ui/icons/Chat\";\n// Redux\n\nimport { connect } from \"react-redux\";\nimport { likeScream, unlikeScream } from \"../redux/actions/dataActions\";\nconst styles = {\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\"\n  }\n};\n\nclass Scream extends Component {\n  render() {\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle //screamId,\n        //likeCount,\n        //commentCount\n\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      image: userImage,\n      title: \"Profile image\",\n      className: classes.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        textDecoration: \"none\"\n      },\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, userHandle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, new Date(createdAt._seconds * 1000).toLocaleString()), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, body), likeButton, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, likeC)));\n  }\n\n}\n\nScream.propTypes = {\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/scream/src/components/Scream.js"],"names":["React","Component","withStyles","Link","PropTypes","Card","CardContent","CardMedia","Typography","connect","likeScream","unlikeScream","styles","card","position","display","marginBottom","image","minWidth","content","padding","objectFit","Scream","render","classes","scream","body","createdAt","userImage","userHandle","props","textDecoration","Date","_seconds","toLocaleString","likeButton","likeC","propTypes","func","isRequired","user","object","openDialog","bool","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\n//import dayjs from \"dayjs\";\n//import relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\n//import MyButton from \"../util/MyButton\";\n//import DeleteScream from \"./DeleteScream\";\n//import ScreamDialog from \"./ScreamDialog\";\n//import LikeButton from \"./LikeButton\";\n// MUI Stuff\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n// Icons\n//import ChatIcon from \"@material-ui/icons/Chat\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { likeScream, unlikeScream } from \"../redux/actions/dataActions\";\n\nconst styles = {\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: 20,\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\",\n  },\n};\n\nclass Scream extends Component {\n  render() {\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        //screamId,\n        //likeCount,\n        //commentCount\n      },\n    } = this.props;\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n          image={userImage}\n          title=\"Profile image\"\n          className={classes.image}\n        />\n        <CardContent className={classes.content}>\n          <Typography\n            style={{ textDecoration: \"none\" }}\n            variant=\"h5\"\n            component={Link}\n            to={`/users/${userHandle}`}\n          >\n            {userHandle}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {new Date(createdAt._seconds * 1000).toLocaleString()}\n          </Typography>\n          <Typography variant=\"body1\">{body}</Typography>\n          {likeButton}\n          <span>{likeC}</span>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nScream.propTypes = {\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(Scream));\n"]},"metadata":{},"sourceType":"module"}