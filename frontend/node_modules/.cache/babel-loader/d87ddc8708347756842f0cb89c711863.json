{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/scream/src/pages/user.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Scream from \"../components/scream/Scream\"; //import StaticProfile from \"../components/profile/StaticProfile\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\nimport ProfileSkeleton from \"../util/ProfileSkeleton\";\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../redux/actions/dataActions\";\n\nclass user extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null,\n      screamIdParam: null\n    };\n  }\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    const screamId = this.props.match.params.screamId;\n    if (screamId) this.setState({\n      screamIdParam: screamId\n    });\n    this.props.getUserData(handle);\n    axios.get(`/user/${handle}`).then(res => {\n      this.setState({\n        profile: res.data.user\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      screams,\n      loading\n    } = this.props.data;\n    const {\n      screamIdParam\n    } = this.state;\n    const screamsMarkup = loading ? /*#__PURE__*/React.createElement(ScreamSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }) : screams === null ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, \"No screams from this user\") : !screamIdParam ? screams.map(scream => /*#__PURE__*/React.createElement(Scream, {\n      key: scream.screamId,\n      scream: scream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 31\n      }\n    })) : screams.map(scream => {\n      if (scream.screamId !== screamIdParam) return /*#__PURE__*/React.createElement(Scream, {\n        key: scream.screamId,\n        scream: scream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }\n      });else return /*#__PURE__*/React.createElement(Scream, {\n        key: scream.screamId,\n        scream: scream,\n        openDialog: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, screamsMarkup), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.state.profile === null ? /*#__PURE__*/React.createElement(ProfileSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(StaticProfile, {\n      profile: this.state.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(user);","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/scream/src/pages/user.js"],"names":["React","Component","PropTypes","axios","Scream","Grid","ScreamSkeleton","ProfileSkeleton","connect","getUserData","user","state","profile","screamIdParam","componentDidMount","handle","props","match","params","screamId","setState","get","then","res","data","catch","err","console","log","render","screams","loading","screamsMarkup","map","scream","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Scream from \"../components/scream/Scream\";\n//import StaticProfile from \"../components/profile/StaticProfile\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\nimport ProfileSkeleton from \"../util/ProfileSkeleton\";\n\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../redux/actions/dataActions\";\n\nclass user extends Component {\n  state = {\n    profile: null,\n    screamIdParam: null,\n  };\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    const screamId = this.props.match.params.screamId;\n\n    if (screamId) this.setState({ screamIdParam: screamId });\n\n    this.props.getUserData(handle);\n    axios\n      .get(`/user/${handle}`)\n      .then((res) => {\n        this.setState({\n          profile: res.data.user,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n  render() {\n    const { screams, loading } = this.props.data;\n    const { screamIdParam } = this.state;\n\n    const screamsMarkup = loading ? (\n      <ScreamSkeleton />\n    ) : screams === null ? (\n      <p>No screams from this user</p>\n    ) : !screamIdParam ? (\n      screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n    ) : (\n      screams.map((scream) => {\n        if (scream.screamId !== screamIdParam)\n          return <Scream key={scream.screamId} scream={scream} />;\n        else return <Scream key={scream.screamId} scream={scream} openDialog />;\n      })\n    );\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item sm={8} xs={12}>\n          {screamsMarkup}\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          {this.state.profile === null ? (\n            <ProfileSkeleton />\n          ) : (\n            <StaticProfile profile={this.state.profile} />\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nexport default connect(mapStateToProps, { getUserData })(user);\n"]},"metadata":{},"sourceType":"module"}