{"ast":null,"code":"var _jsxFileName = \"/Users/sourabhamancha/Desktop/full-stack-social-media-app/scream/src/components/scream/Comments.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\"; // MUI\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = () => ({\n  commentImage: {\n    maxWidth: \"100%\",\n    height: 100,\n    objectFit: \"cover\",\n    borderRadius: \"50%\"\n  },\n  commentData: {\n    marginLeft: 20\n  }\n});\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      comments,\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, comments && comments.map((comment, index) => {\n      const {\n        body,\n        createdAt,\n        userImage,\n        userHandle\n      } = comment;\n      const updatedUserImage = axios.get(`/user/${userHandle}`).then(res => {\n        return res.data.user.imageUrl;\n      }).catch(err => {\n        console.error(err);\n      });\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: createdAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: updatedUserImage,\n        alt: \"comment\",\n        className: classes.commentImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.commentData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        component: Link,\n        to: `/user/${userHandle}`,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, userHandle), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(\"hr\", {\n        style: {\n          border: \"0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variabnt: \"body1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, body))))), index !== comments.length - 1 && /*#__PURE__*/React.createElement(\"hr\", {\n        style: {\n          border: \"0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }));\n    }));\n  }\n\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["/Users/sourabhamancha/Desktop/full-stack-social-media-app/scream/src/components/scream/Comments.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Link","dayjs","axios","Grid","Typography","styles","commentImage","maxWidth","height","objectFit","borderRadius","commentData","marginLeft","Comments","state","render","comments","classes","props","map","comment","index","body","createdAt","userImage","userHandle","updatedUserImage","get","then","res","data","user","imageUrl","catch","err","console","error","format","border","length","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\n// MUI\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = () => ({\n  commentImage: {\n    maxWidth: \"100%\",\n    height: 100,\n    objectFit: \"cover\",\n    borderRadius: \"50%\",\n  },\n  commentData: {\n    marginLeft: 20,\n  },\n});\n\nclass Comments extends Component {\n  state = {};\n  render() {\n    const { comments, classes } = this.props;\n    return (\n      <Grid container>\n        {comments &&\n          comments.map((comment, index) => {\n            const { body, createdAt, userImage, userHandle } = comment;\n            const updatedUserImage = axios\n              .get(`/user/${userHandle}`)\n              .then((res) => {\n                return res.data.user.imageUrl;\n              })\n              .catch((err) => {\n                console.error(err);\n              });\n            return (\n              <Fragment key={createdAt}>\n                <Grid item sm={12}>\n                  <Grid container>\n                    <Grid item sm={2}>\n                      <img\n                        src={updatedUserImage}\n                        alt=\"comment\"\n                        className={classes.commentImage}\n                      />\n                    </Grid>\n                    <Grid item sm={9}>\n                      <div className={classes.commentData}>\n                        <Typography\n                          variant=\"h5\"\n                          component={Link}\n                          to={`/user/${userHandle}`}\n                          color=\"primary\"\n                        >\n                          {userHandle}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n                        </Typography>\n                        <hr style={{ border: \"0\" }} />\n                        <Typography variabnt=\"body1\">{body}</Typography>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                {index !== comments.length - 1 && (\n                  <hr style={{ border: \"0\" }} />\n                )}\n              </Fragment>\n            );\n          })}\n      </Grid>\n    );\n  }\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(Comments);\n"]},"metadata":{},"sourceType":"module"}